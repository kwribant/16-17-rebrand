//
// Font fam
//
$font-family: "Karla", sans-serif;

//
// Weights
//
$normal-weight: 300;
$heavy-weight: 600;

//
// Line heights
//
$headlineLineHeight: 1.5;
$bodyLineHeight: 1.65;

$copy-set: (
  h1: (
    base: (
      font-size: 25px,
      line-height: $headlineLineHeight,
      font-weight: $normal-weight
    ),
    medium: (
      font-size: 31px,
    ),
  ),
  h2: (
    base: (
      font-size: 20px,
      line-height: $headlineLineHeight,
      font-weight: $normal-weight
    ),
    medium: (
      font-size: 25px,
    ),
  ),
  h3: (
      base: (
        font-size: 16px,
        line-height: $headlineLineHeight,
        font-weight: $normal-weight
      ),
      medium: (
        font-size: 20px
      )
  ),
  h4: (
    base: (
      font-size: 16px,
      line-height: $headlineLineHeight,
      font-weight: $heavy-weight
    ),
  ),
  body1: (
    base: (
      font-size: 16px,
      line-height: $bodyLineHeight,
      font-weight: $normal-weight
    )
  ),
  body2: (
    base: (
      font-size: 14px,
      line-height: $bodyLineHeight,
      font-weight: $normal-weight
    )
  )
);

//
// Get dat type
//
@mixin type($copy-set-child) {
    font-family: $font-family;
    @if map-has-key($copy-set, $copy-set-child) {
        // now we have access to the different breakpoint (base, and medium)
        $breakpoint-groups: map-get($copy-set, $copy-set-child);

        @each $breakpoint-name, $type-properties in $breakpoint-groups {
            @include breakpoint($breakpoint-name) {
                @each $property, $value in $type-properties {
                    #{$property}: #{$value};
                }
            }
        }
    } @else {
        @error "#{$copy-set} or #{$copy-set-child} does not exist"
    }
};

//
// Link styles
//
@mixin link() {
    color: color('darkest-gray');

    &::after {
        width: 100%;
        content: "";
        border-bottom: 1px solid color('darkest-gray');
        display: block;
        position: relative;
        bottom: 2px;
    }

    &:hover {
        color: color('dark-gray');

        &::after {
            border-color: color('dark-gray');
        }
    }
}
